# =================================================================
# ARQUIVO DE CONFIGURAÇÃO NGINX PARA O SISTEMA DE TREINAMENTOS (VERSÃO CORRIGIDA)
# =================================================================
#
# Este arquivo é para ser usado no Nginx do seu servidor VPS.
# Ele atua como um reverse proxy, direcionando o tráfego para o container Docker.
#
# -----------------------------------------------------------------
# ⚠️ IMPORTANTE: Substitua "seu_dominio.com.br" pelo seu domínio real.
#    (Neste caso, já está correto como "cursos.girabot.com.br")
# -----------------------------------------------------------------

# Bloco 1: Servidor HTTP (Porta 80)
# Redireciona todo o tráfego não seguro para a versão segura (HTTPS).
# Esta parte é gerenciada pelo Certbot.
server {
    listen 80;
    listen [::]:80;

    server_name cursos.girabot.com.br;

    # O Certbot usa este local para verificar a propriedade do domínio
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Redirecionamento permanente para HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Bloco 2: Servidor HTTPS (Porta 443)
# Este é o bloco principal que serve sua aplicação.
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name cursos.girabot.com.br;

    # --- Configurações de SSL (Gerenciadas pelo Certbot) ---
    # Estas linhas são essenciais e foram adicionadas pelo Certbot.
    ssl_certificate /etc/letsencrypt/live/cursos.girabot.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cursos.girabot.com.br/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;


    # --- Configuração do Reverse Proxy ---
    # Captura todas as requisições e as encaminha para o container Docker.
    location / {
        # A linha "try_files" foi REMOVIDA daqui.
        # Essa lógica agora está dentro do Nginx do container Docker.

        # O endereço onde o container Docker está rodando.
        proxy_pass http://localhost:3000;

        # Cabeçalhos essenciais para o proxy funcionar corretamente.
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Configurações para suportar WebSockets.
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}